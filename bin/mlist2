#/bin/bash

#filename: findlist
#作者： xzap (xzap1982(at)gmail.com

#说明： 这个小脚本的作用就是搜索出指定目录下的指定文件，由于*的问题，
#所以设置成了只根据后缀名来查找文件，脚本会自动更改为*.xxx这样的形
#式。可同时搜索4个文件。主要是练习使用zenity瞎编的。

#用途：  一、作为mplayer的播放列表。灵活而且还很方便。
#	二、作为其他软件的列表，比如看图的feh，或者看小说的时候的书
#	架一样。
#	三、处理文件，可以带-e rm这样，找一列表文件后删除它。
###########################一点点预设#######################
#预设搜索目录
dir2="."
#预设搜索文件
f_patten="jpg;rmvb;avi;png"
#设置打开图片的软件
exe_pic="feh"
#设置打开多媒体的软件
exe_media="mplayer"
#设置打开PDF的软件
exe_pdf="evince"
#是否启用预设的文件打开程序,"yes" or "no"
exe_chioce="yes"
#打开文件时是否确认,"yes" or "no"
exe_sure="no"

#########################帮助文件######################

usage(){
echo "   用法："
echo -e "\t`basename $0` [选项...] [参数]"
echo
cat <<EOF
	-f	后面带参数，要查找的文件的后缀名，如："jpg"
		可以带用分号分割多个，最多4个。
	-d	目录，后面跟要搜索的目录路径
	-e	指定应用程序打开文件，如不设置根据源文件中的
		设置。图片用feh,视频用mplayer......
	-s	搜索完毕后，从列表打开文件时需要确认。
	-g	使用gui界面来设置将启用一个文件打开选择框来
		选择搜索路径和一个文本输入框来输入搜索文件的
		后缀名。
	-h	本帮助文件。

		不带任何参数默认搜索当前目录下，jpg、png、
		rmvb和avi文件。		
EOF

}

##########################开始处理参数##################

if [ $# -gt 0 ]
then
until [ ! $1 ]
do
case $1 in 
-f)
if [ $2 ]
then
if [ ${2:0:1} = "-" ]
then
echo "-f需要一个参数，请参看`basename $0` -h 获得帮助"
exit
fi
shift
f_patten="$1"

shift
else
echo "-f需要一个参数，请参看`basename $0` -h 获得帮助"
exit
fi
;;
-d)
if [ $2 ]
then
if [ ${2:0:1} = "-" ]
then
echo "-d需要一个参数，请参看`basename $0` -h 获得帮助"
exit
fi
dir2="$2"
shift
shift
else
echo "-d需要一个参数，请参看`basename $0` -h 获得帮助"
exit
fi
;;
-e)
if [ $2 ]
then
if [ ${2:0:1} = "-" ]
then
echo "-e需要一个参数，请参看`basename $0` -h 获得帮助"
exit
fi
exe_chioce="no"
f_exe="$2"
shift
shift
else
echo "-e需要一个参数，请参看`basename $0` -h 获得帮助"
exit
fi
;;
-g)

dir2=`zenity --file-selection --directory --multiple --separator " " --title "请选择要查找的目录"`
if [ $? = 1 ]
then 
zenity --question --text "按“取消”取消搜索,按“确定”当前目录搜索" --title " 是否继续"
if [ $? = 1 ]
then
exit
else 
dir2="."

fi
fi
f_patten=`zenity --entry --text "如:\"jpg\"，也可以输入多个以\";\"分割，如:\"jpg;rmvb\"" --title "请输入查找文件的后缀名" --entry-text $f_patten` 
if [ $? = 1 ]
then
exit
fi
shift
;;
-h|--help)
usage
exit
;;
-s)
exe_sure="yes"
shift
;;
*)
echo "参数错误，请参看`basename $0` -h 获得帮助"
exit
;;
esac
done 
fi

################总算处理完参数了，开始搜索吧##########################################

awkcount=`echo $f_patten |awk -F ";" '{print NF}'`
for((l=1;l<=$awkcount;l++))
do
f_grep[l]=`echo $f_patten |awk -v y=$l -F ";" '{print "*."$y}'`
done
echo "开始搜索，请等待……"
result=`find "$dir2" -name "${f_grep[1]}" -o -name "${f_grep[2]}" -o -name "${f_grep[3]}" -o -name "${f_grep[4]}"|sed -e 's/ /_#blank#_/g'`
echo "处理数据，请等待……"
count=`echo $result |awk '{print NF}'`
for ((i=1;i<=$count;i++))
do
f_file[$i]=`echo $result|awk -v j=$i '{print $j}' `
done
for ((k=1;k<=${#f_file[@]};k++))
do 

f_name[$k]=`basename "${f_file[$k]}"`
f_dir[$k]=`dirname "${f_file[$k]}"`
f_file[$k]=`echo "${f_file[$k]}"|sed 's/_#blank#_/ /g'`
f_time[$k]=`stat -c %z "${f_file[$k]}"|awk '{print $1,"_",$2}'|sed 's/ //g'|sed 's/\.00*//g'`
f_size[$k]=`stat -c %s "${f_file[$k]}"`
f_file[$k]=`echo "${f_file[$k]}"|sed 's/ /_#blank#_/g'`
f_all[$k]="${f_name[$k]}"" ""${f_dir[$k]}"" ""${f_file[$k]}"" ""${f_time[$k]}"" ""${f_size[$k]}"

done

#######################搜索和处理完毕准备显示文件#######################
while :
do
echo "请选择要查看的文件"
arg=`echo ${f_all[@]}|xargs zenity --width "800" --height "600" --list --print-column 3 --hide-column 3 --column "文件名" --column "目录" --column "路径" --column "时间" --column "大小"`
echo $arg
if [ -z $arg ]
then
break
exit 65
else
arg=`echo $arg|sed 's/_#blank#_/ /g'`
shuffix=${arg##*\.}
if [ $exe_chioce = "yes" ]
then
case $shuffix in
jpg|JPG|png|PNG)f_exe=$exe_pic;;
rmvb|rm)f_exe=$exe_media;;
avi)f_exe=$exe_media;;
mp3)f_exe=$exe_media;;
pdf|PDF)f_exe=$exe_pdf;;
*)echo "没有预设打开软件，请用-e选项设置全部，请参看`basename $0` -h 获得帮助";f_exe=":";;
esac
fi
if [ ! -z $f_exe ] 
then
if [ $exe_sure = "no" ]
then
"$f_exe" "$arg"
else
zenity --question --text "是否用"$f_exe"处理"$arg"" --title " 是否继续"
if [ $? = 0 ]
then
"$f_exe" "$arg"
fi
fi
fi
fi
done

